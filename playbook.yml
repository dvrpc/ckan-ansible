---
# This playbook to be run after playbook_init has been run once, and then can be run on its
# own anytime changes need to be made.
- hosts: ckan
  become: true
  vars:
    ve_dir: /usr/lib/ckan/default

  handlers:
    - name: reload nginx
      service:
        name: nginx
        state: reloaded
        enabled: true

    - name: restart solr
      service:
        name: tomcat9
        state: restarted
        enabled: true

    - name: reload ckan
      command: supervisorctl reload

    - name: reload ufw
      ufw:
        state: reloaded

  pre_tasks:
    - name: Update apt cache
      apt: update_cache=yes cache_valid_time=3600

    - name: Install packages required for ansible on the remote server
      block:

        - name: Install system packages
          apt:
            name:
              - python3-pip
              - acl
            state: present

        - name: Install psycopg2
          pip:
            name:
              - psycopg2-binary
              - lxml
            state: present

  roles:
    - users
    - hardening
    - base
    - dvrpc_theme
    - scheming
    - harvest
    - pdfview
    - geoview

  tasks:
    - name: Set up nginx for dev servers
      include_role:
        name: base
        tasks_from: nginx_dev
      when: env == "development"

    - name: remove letscrypt tls from internal production server
      include_role:
        name: base
        tasks_from: remove_letsencrypt
      when: env == "production" and instance == "internal"

    - name: Set up nginx/letsencrypt tls cert on public production server
      include_role:
        name: base
        tasks_from: tls_letsencrypt
      when: env == "production" and instance == "public"

    - name: Set up nginx/wildcard tls cert on internal production server
      include_role:
        name: base
        tasks_from: tls_wildcard
      when: env == "production" and instance == "internal"

    - name: Set up oauth for internal instance
      include_role:
        name: oauth
      when: env == "production" and instance == "internal"

    # - name: Set up showcases for internal instance
    #   include_role:
    #     name: showcases
    #   when: env == "production" and instance == "internal"

    - name: Set up GIS harvester for internal instance
      include_role:
        name: dvrpc_gis_harvester
      when: instance ==  "internal"

    - name: Set up custom privileges for internal instance
      include_role:
        name: custom_privileges
      when: instance == "internal"

    - name: Install internal harvester
      include_role:
        name: dvrpc_internal_harvester
      when: instance == "public"

    - name: Password protect site public site (temporarily)
      include_role:
        name: base
        tasks_from: add_basic_auth
      when: env == "production" and instance == "public"

    # - name: Remove password protection
    #   include_role:
    #     name: base
    #     tasks_from: remove_basic_auth
    #   when: env == "production" and instance == "public"
